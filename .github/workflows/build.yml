name: Build and Create Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
  
    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        fetch-tags: true
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build executable
      run: |
        GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o hakip2host-${{ matrix.os }}-${{ matrix.arch }}
        CGO_ENABLED=0 GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o hakip2host-${{ matrix.os }}-${{ matrix.arch }}-nocgo

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: hakip2host-${{ matrix.os }}-${{ matrix.arch }}
        path: hakip2host-${{ matrix.os }}-${{ matrix.arch }}

    - name: Upload build artifacts (nocgo)
      uses: actions/upload-artifact@v4
      with:
        name: hakip2host-${{ matrix.os }}-${{ matrix.arch }}-nocgo
        path: hakip2host-${{ matrix.os }}-${{ matrix.arch }}-nocgo


  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: binaries/

      - name: Display structure of downloaded files
        run: ls -l binaries/
          
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          make_latest: true
          body: Binaries Release
          fail_on_unmatched_files: true
          tag_name: ${{ github.ref_name }}-${{ github.sha }}
          files: |
            ./binaries/*