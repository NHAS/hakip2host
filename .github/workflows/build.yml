name: Build and Create Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
  
    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        fetch-tags: true
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build executable
      run: |
        GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o hakip2host-${{ matrix.os }}-${{ matrix.arch }}
        CGO_ENABLED=0 GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o hakip2host-${{ matrix.os }}-${{ matrix.arch }}-nocgo

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: hakip2host-${{ matrix.os }}-${{ matrix.arch }}
        path: ./hakip2host-${{ matrix.os }}-${{ matrix.arch }}

    - name: Upload build artifacts (nocgo)
      uses: actions/upload-artifact@v4
      with:
        name: hakip2host-${{ matrix.os }}-${{ matrix.arch }}-nocgo
        path: ./hakip2host-${{ matrix.os }}-${{ matrix.arch }}-nocgo

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: ${{ github.ref_name }}
        body: |
          Release
        draft: false
        prerelease: false

    - name: Upload all binaries to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./hakip2host-${{ matrix.os }}-${{ matrix.arch }}
        asset_name: hakip2host-${{ matrix.os }}-${{ matrix.arch }}
        asset_content_type: application/octet-stream

    - name: Upload all binaries to release (nocgo)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./hakip2host-${{ matrix.os }}-${{ matrix.arch }}-nocgo
        asset_name: hakip2host-${{ matrix.os }}-${{ matrix.arch }}-nocgo
        asset_content_type: application/octet-stream